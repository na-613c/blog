{"version":3,"sources":["path.ts","components/CreatePostPage.tsx","components/MainPage.tsx","components/PostPage.tsx","components/AppRouter.tsx","initialState.tsx","reducer.tsx","components/Heder.tsx","App.tsx","index.tsx"],"names":["PATH_MAIN_PAGE","PATH_CREATE_POST_PAGE","Text","Typography","tailLayout","wrapperCol","offset","span","CreatePostPage","addPost","useForm","register","handleSubmit","setValue","errors","formState","useEffect","required","maxLength","getChangeHandlerWithEvent","name","event","target","value","hasErrorClass","className","errorDetail","message","type","location","action","console","log","pathname","startsWith","style","width","margin","onSubmit","data","post","notification","success","description","Item","label","onChange","htmlType","columns","title","dataIndex","key","align","render","to","id","ellipsis","MainPage","posts","dataSource","pagination","defaultPageSize","pageSizeOptions","size","bordered","PostPage","AppRouter","state","path","exact","map","React","memo","initialState","reducer","length","Error","Header","Layout","HeaderApp","useState","selectedKeys","setSelectedKeys","useLocation","marginBottom","theme","mode","App","useReducer","dispatch","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11737c70.chunk.js","sourcesContent":["export const PATH_MAIN_PAGE = '/'\r\nexport const PATH_CREATE_POST_PAGE = '/create-post-page'","import React, { useEffect, FC } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Form, Input, Button, Typography, notification } from 'antd';\r\nimport { Prompt } from \"react-router-dom\";\r\nimport { PATH_MAIN_PAGE } from '../path'\r\nimport Action from '../models/ActionI'\r\n\r\n\r\nconst { Text } = Typography;\r\n\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst CreatePostPage: FC<{ addPost: { (action: Action): void } }> = ({ addPost }) => {\r\n\r\n  const { register, handleSubmit, setValue, formState: { errors } } = useForm();\r\n\r\n  useEffect(() => {\r\n\r\n    register(\"title\", { required: true, maxLength: 20 })\r\n    register(\"post\", { required: true, maxLength: 300 })\r\n\r\n  }, [register, setValue]);\r\n\r\n  const getChangeHandlerWithEvent = (name: any) => (event: any) =>\r\n    setValue(name, event.target.value);\r\n\r\n  const hasErrorClass = (name: any) => ({ className: errors[name] && \"has-error\" });\r\n\r\n  const errorDetail = (name: any, message: string) =>\r\n    errors[name] && <Text type=\"danger\">{message}</Text>;\r\n\r\n  const onSubmit = (data: any) => {\r\n\r\n    addPost({ type: 'ADD_POST', post: data })\r\n    notification.success({\r\n      message: 'SUCCUSS',\r\n      description: 'Post created successfully.',\r\n    });\r\n  }\r\n\r\n  const message = (location: any, action: any) => {\r\n    if (action === 'POP') {\r\n      console.log(\"Backing up...\")\r\n    }\r\n\r\n    return location.pathname.startsWith(PATH_MAIN_PAGE) && 'Are you sure you want to leave the page?'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Prompt message={message} />\r\n\r\n      <form style={{ width: 400, margin: 'auto' }}\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <Form.Item label=\"Title\" {...hasErrorClass(\"title\")}>\r\n          <Input\r\n            onChange={getChangeHandlerWithEvent(\"title\")}\r\n          />\r\n          {errorDetail(\"title\", \"Please input title!\")}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Post\" {...hasErrorClass(\"post\")}>\r\n          <Input\r\n            onChange={getChangeHandlerWithEvent(\"post\")}\r\n          />\r\n          {errorDetail(\"post\", \"Please input post!\")}\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            create\r\n        </Button>\r\n        </Form.Item>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CreatePostPage;\r\n","import React, { FC } from 'react';\r\nimport { Table, Typography } from 'antd';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { ColumnsType } from 'antd/es/table';\r\nimport Post from '../models/PostI'\r\n\r\n\r\nconst { Text } = Typography;\r\n\r\n\r\nconst columns: ColumnsType<Post> = [\r\n    {\r\n        title: 'Title',\r\n        dataIndex: 'title',\r\n        key: 'title',\r\n        align: 'center',\r\n        render: (title: string, post: Post) => <NavLink to={`/post${post.id + 1}`}>{title}</NavLink>\r\n    },\r\n    {\r\n        title: 'Post',\r\n        dataIndex: 'post',\r\n        key: 'post',\r\n        align: 'center',\r\n        render: (post: string) => (\r\n            <Text ellipsis style={{ margin: 'auto', width: 100 }}>{post}</Text>)\r\n    },\r\n]\r\n\r\n\r\nconst MainPage: FC<{ posts: Post[] }> = ({ posts }) => {\r\n    return (\r\n        <div style={{ margin: 'auto', width: 400 }}>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={posts}\r\n                pagination={{\r\n                    defaultPageSize: 5,\r\n                    pageSizeOptions: ['5', '10', '20', '50', '100'],\r\n                    size: 'default',\r\n                }}\r\n                bordered />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default MainPage;\r\n","import React, { FC } from 'react';\r\nimport Post from '../models/PostI'\r\n\r\n\r\nconst PostPage: FC<{ post: Post }> = ({ post }) => {\r\n  return (\r\n    <div>\r\n      <h1>{post.title}</h1>\r\n      <p>{post.post}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import React, { FC } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport CreatePostPage from './CreatePostPage';\r\nimport MainPage from './MainPage';\r\nimport PostPage from './PostPage';\r\nimport { PATH_MAIN_PAGE, PATH_CREATE_POST_PAGE } from '../path'\r\nimport Action from '../models/ActionI'\r\nimport Posts from '../models/PostsI'\r\n\r\n\r\ninterface Props {\r\n    state: Posts, \r\n    addPost: { (action: Action): void }\r\n}\r\n\r\nconst AppRouter: FC<Props> = ({ state, addPost }) => {\r\n    return (\r\n        <Switch>\r\n            <Route path={PATH_MAIN_PAGE} render={() => <MainPage posts={state.posts} />} exact={true} />\r\n            <Route path={PATH_CREATE_POST_PAGE} render={() => <CreatePostPage addPost={addPost} />} exact={true} />\r\n            {state.posts.map((post: any, id: any) => (\r\n                <Route key={id} path={`/post${id + 1}`} render={() => <PostPage post={post} />} exact={true} />\r\n            ))}\r\n            <Redirect to={PATH_MAIN_PAGE} />\r\n        </Switch>\r\n    );\r\n};\r\nexport default React.memo(AppRouter);\r\n","export const initialState = {\r\n    posts: [\r\n        { id: 0, title: 'myTitle1', post: 'myPost11111111111111111111111111111111111111111111111111111111111' },\r\n        { id: 1, title: 'myTitle2', post: 'myPost2' },\r\n        { id: 2, title: 'myTitle3', post: 'myPost3' },\r\n        { id: 3, title: 'myTitle4', post: 'myPost4' },\r\n        { id: 4, title: 'myTitle5', post: 'myPost5' },\r\n        { id: 5, title: 'myTitle6', post: 'myPost6' },\r\n        { id: 6, title: 'myTitle7', post: 'myPost7' },\r\n        { id: 7, title: 'myTitle8', post: 'myPost8' },\r\n        { id: 8, title: 'myTitle9', post: 'myPost9' },\r\n        { id: 9, title: 'myTitle10', post: 'myPost10' },\r\n        { id: 10, title: 'myTitle11', post: 'myPost11' },\r\n        { id: 11, title: 'myTitle12', post: 'myPost12' },\r\n        { id: 12, title: 'myTitle13', post: 'myPost13' },\r\n        { id: 13,  title: 'myTitle14', post: 'myPost14' },\r\n        { id: 14, title: 'myTitle15', post: 'myPost15' },\r\n        { id: 15, title: 'myTitle16', post: 'myPost16' },\r\n        { id: 16, title: 'myTitle17', post: 'myPost17' },\r\n        { id: 17, title: 'myTitle18', post: 'myPost18' },\r\n        { id: 18, title: 'myTitle19', post: 'myPost19' },\r\n        { id: 19, title: 'myTitle20', post: 'myPost20' },\r\n    ],\r\n};","export const reducer = (state: any, action: any) => {\r\n    switch (action.type) {\r\n        case 'ADD_POST':\r\n            return {\r\n                posts: [...state.posts, {\r\n                    id: state.posts.length,\r\n                    ...action.post\r\n                }]\r\n            };\r\n        default:\r\n            throw new Error();\r\n    }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { PATH_MAIN_PAGE, PATH_CREATE_POST_PAGE } from '../path'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\nconst HeaderApp = () => {\r\n\r\n    const [selectedKeys, setSelectedKeys] = useState(['2'])\r\n\r\n    let location = useLocation()\r\n\r\n    useEffect(() => {\r\n        switch (location.pathname) {\r\n            case PATH_MAIN_PAGE:\r\n                setSelectedKeys(['1']);\r\n                break;\r\n            case PATH_CREATE_POST_PAGE:\r\n                setSelectedKeys(['2']);\r\n                break;\r\n            default: setSelectedKeys(['0']);\r\n        }\r\n    }, [location])\r\n\r\n    return (\r\n        <Header style={{ marginBottom: 50 }}>\r\n            <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={selectedKeys}>\r\n                <Menu.Item key=\"1\">\r\n                    <NavLink to={PATH_MAIN_PAGE}>Main page</NavLink>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                    <NavLink to={PATH_CREATE_POST_PAGE}>Create post page</NavLink>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </Header>\r\n    );\r\n};\r\n\r\nexport default HeaderApp;\r\n","import React, { useReducer } from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport { HashRouter } from 'react-router-dom';\nimport AppRouter from './components/AppRouter';\nimport { initialState } from './initialState'\nimport { reducer } from './reducer'\nimport HeaderApp from './components/Heder';\n\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <HeaderApp />\n        <AppRouter state={state} addPost={dispatch} />\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}